C51 COMPILER V6.02  UART_UPDATE                                                            04/27/2017 20:24:06 PAGE 1   


C51 COMPILER V6.02, COMPILATION OF MODULE UART_UPDATE
OBJECT MODULE PLACED IN .\uart-update.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE .\uart-update.c DEBUG OBJECTEXTEND

stmt level    source

   1          /***********************************************************************
   2          MODULE:    UART
   3          VERSION:   1.03
   4          CONTAINS:  Routines for controlling the UART peripheral on the Philips
   5                     P89LPC932
   6          COPYRIGHT: Embedded Systems Academy, Inc. - www.esacademy.com
   7          LICENSE:   May be freely used in commercial and non-commercial code
   8                     without royalties provided this copyright notice remains
   9                     in this file and unaltered
  10          WARNING:   IF THIS FILE IS REGENERATED BY CODE ARCHITECT ANY CHANGES
  11                     MADE WILL BE LOST. WHERE POSSIBLE USE ONLY CODE ARCHITECT
  12                     TO CHANGE THE CONTENTS OF THIS FILE
  13          GENERATED: On "Jun 24 2003" at "10:17:56" by Code Architect 2.01
  14          ***********************************************************************/
  15          
  16          // SFR description needs to be included
  17          #include <reg932.h>
  18          #include "uart.h"
  19          
  20          // flag that indicates if the UART is busy transmitting or not
  21          static bit mtxbusy;
  22          
  23          /***********************************************************************
  24          DESC:    Initializes UART for mode 1
  25                   Baudrate: 9600
  26          RETURNS: Nothing
  27          CAUTION: If interrupts are being used then EA must be set to 1
  28                   after calling this function
  29          ************************************************************************/
  30          void uart_init
  31            (
  32            void
  33            )
  34          {
  35   1        // configure UART
  36   1        // clear SMOD0
  37   1        PCON &= ~0x40;
  38   1        SCON = 0x50;
  39   1        // set or clear SMOD1
  40   1        PCON &= 0x7f;
  41   1        PCON |= (0 << 8);
  42   1        SSTAT = 0x00;
  43   1      
  44   1        // enable break detect
  45   1        AUXR1 |= 0x40;
  46   1      
  47   1        // configure baud rate generator
  48   1        BRGCON = 0x00;
  49   1        BRGR0 = 0xF0;
  50   1        BRGR1 = 0x02;                      //BRGR0 and BRGR1 were
  51   1        BRGCON = 0x03;                     //changed to set the baud rate to 9600
  52   1      
  53   1        // TxD = push-pull, RxD = input
  54   1        P1M1 &= ~0x01;
  55   1        P1M2 |= 0x01;
C51 COMPILER V6.02  UART_UPDATE                                                            04/27/2017 20:24:06 PAGE 2   

  56   1        P1M1 |= 0x02;
  57   1        P1M2 &= ~0x02;
  58   1      
  59   1        // initially not busy
  60   1        mtxbusy = 0;
  61   1      
  62   1        // set isr priority to 0
  63   1        IP0 &= 0xEF;
  64   1        IP0H &= 0xEF;
  65   1        // enable uart interrupt
  66   1        ES = 1;
  67   1      
  68   1      } // uart_init
  69          
  70          /***********************************************************************
  71          DESC:    UART Interrupt Service Routine
  72          RETURNS: Nothing
  73          CAUTION: uart_init must be called first
  74                   EA must be set to 1
  75          ************************************************************************/
  76          void uart_isr
  77            (
  78            void
  79            ) interrupt 4 using 1
  80          {
  81   1        if (RI)
  82   1        {
  83   2          // clear interrupt flag
  84   2          RI = 0;
  85   2        } // if
  86   1      
  87   1        if (TI)
  88   1        {
  89   2          // clear interrupt flag
  90   2          TI = 0;
  91   2          // no longer busy
  92   2          mtxbusy = 0;
  93   2        } // if
  94   1      
  95   1      } // uart_isr
  96          
  97          /***********************************************************************
  98          DESC:    Transmits a 8-bit value via the UART in the current mode
  99                   May result in a transmit interrupt if enabled.
 100          RETURNS: Nothing
 101          CAUTION: uart_init must be called first
 102          ************************************************************************/
 103          void uart_transmit
 104            (
 105            unsigned char value    // data to transmit
 106            )
 107          {
 108   1        while(mtxbusy);
 109   1        mtxbusy = 1;
 110   1        SBUF = value;
 111   1      } // uart_transmit
 112          
 113          /***********************************************************************
 114          DESC:    Gets a received 8-bit value from the UART
 115          RETURNS: Received data
 116          CAUTION: uart_init must be called first
 117          ************************************************************************/
C51 COMPILER V6.02  UART_UPDATE                                                            04/27/2017 20:24:06 PAGE 3   

 118          unsigned char uart_get
 119            (
 120            void
 121            )
 122          {
 123   1        return SBUF;
 124   1      } // uart_get
 125          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     73    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
